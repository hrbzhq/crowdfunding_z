name: Run Autoupdate (manual)

on:
  workflow_dispatch:
    inputs:
      create_issues:
        description: 'Set to "yes" to allow creating GitHub issues (requires secrets to be configured)'
        required: false
        default: 'no'

jobs:
  run-autoupdate:
    runs-on: ubuntu-latest
    # Minimal permissions: the safe run doesn't need issue write access.
    # When creating issues, grant `issues: write` at the job level or rely on `secrets.GITHUB_TOKEN`.
    # If your workflow needs a PAT with broader permissions, store it in repository secrets and provide
    # it as `secrets.GITHUB_TOKEN` (or a dedicated `AUTODATE_PAT`). Prefer least-privilege PATs.
    permissions:
      contents: read
      issues: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Run autoupdate (safe)
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          ENABLE_AUTOUPDATE: 'false'
        run: |
          echo "Running autoupdater (safe run). To enable real issue creation, re-run this workflow with 'create_issues=yes' and set required secrets."
          go mod tidy
          go run main.go --autoupdate

      - name: Run autoupdate (create issues)
        if: ${{ github.event.inputs.create_issues == 'yes' && secrets.GITHUB_TOKEN != '' && secrets.GITHUB_REPO != '' }}
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          ENABLE_AUTOUPDATE: 'false'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPO: ${{ secrets.GITHUB_REPO }}
        run: |
          echo "Running autoupdater with real GitHubUpdater (issues will be created)."
          go mod tidy
          go run main.go --autoupdate
